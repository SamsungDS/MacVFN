//
//  MacVFN.iig
//  MacVFN
//
//  Created by Mads Ynddal on 24/11/2023.
//

#ifndef MacVFN_h
#define MacVFN_h

#include <Availability.h>
#include <DriverKit/IOLib.h>
#include <DriverKit/DriverKit.iig>
#include <DriverKit/OSAction.iig>
#include <DriverKit/IOService.iig>
#include <DriverKit/IOMemoryDescriptor.iig>
#include <DriverKit/IOInterruptDispatchSource.iig>
#include <DriverKit/IOService.iig>
#include <PCIDriverKit/IOPCIDevice.iig>
#include "MacVFNShared.h"

class MacVFN: public IOService
{
public:
    virtual bool init() override;
    virtual void free() override;
    virtual kern_return_t
    Start(IOService * provider) override;
    virtual kern_return_t
    Stop(IOService * provider) override;
    virtual kern_return_t
    NewUserClient(uint32_t type, IOUserClient **userClient) override;

    // Helpers for UserClient
    uint32_t nvme_init() LOCALONLY;
    uint32_t nvme_oneshot(NvmeSubmitCmd* cmd, void* vaddr) LOCALONLY;
    uint32_t nvme_create_ioqpair(NvmeQueue* queue) LOCALONLY;
    uint32_t nvme_delete_ioqpair(NvmeQueue* queue) LOCALONLY;
    int dma_map_buffer(IOMemoryDescriptor* mem, void *vaddr, size_t len) LOCALONLY;
    int dma_unmap_buffer(IOMemoryDescriptor* mem, void *vaddr) LOCALONLY;
    kern_return_t get_queue_buffer(uint32_t qid, uint32_t sq, IOMemoryDescriptor **memory) LOCALONLY;
    kern_return_t poke(uint32_t sqid, uint32_t cqid, struct buffer* buffers) LOCALONLY;
    kern_return_t process_sq(uint32_t qid, struct buffer* buffers) LOCALONLY;
    kern_return_t process_cq(uint32_t qid) LOCALONLY;
    void stop_userclient() LOCALONLY;
    void nvme_close_all() LOCALONLY;
};

#endif /* MacVFN_h */
